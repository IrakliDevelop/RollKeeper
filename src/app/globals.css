@import "tailwindcss";

:root {
  --background: #ffffff;
  --foreground: #171717;
}

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --font-sans: var(--font-geist-sans);
  --font-mono: var(--font-geist-mono);
}

@media (prefers-color-scheme: dark) {
  :root {
    --background: #0a0a0a;
    --foreground: #ededed;
  }
}

body {
  background: var(--background);
  color: var(--foreground);
  font-family: Arial, Helvetica, sans-serif;
}

/* Global button cursor styling */
button {
  cursor: pointer;
}

/* Fix text readability - make text darker without changing backgrounds */
input, 
textarea, 
select {
  color: #1f2937; /* Dark gray text instead of light gray */
}

/* Placeholder text should be medium gray, not too light */
input::placeholder,
textarea::placeholder {
  color: #6b7280; /* Medium gray for good readability */
  opacity: 1;
}


/* TipTap Editor content - make text darker and more specific */
.ProseMirror {
  color: #1f2937 !important; /* Dark text for readability */
}

.ProseMirror p,
.ProseMirror h1,
.ProseMirror h2, 
.ProseMirror h3,
.ProseMirror h4,
.ProseMirror h5,
.ProseMirror h6,
.ProseMirror li,
.ProseMirror ul,
.ProseMirror ol,
.ProseMirror div {
  color: #1f2937 !important; /* Ensure all editor content is dark */
}

/* Fix text inputs in editor mode */
.prose input[type="text"] {
  color: #1f2937 !important;
}
/* but for placeholder text */
.prose input[type="text"]::placeholder {
  color: #9ca3af !important;
}

/* Fix light gray text on white buttons */


/* Make sure all text in forms is readable */
form input,
form textarea,
form select {
  color: #1f2937;
}

/* Dark mode adjustments */
@media (prefers-color-scheme: dark) {
  
  select {
    color: #9ca3af;
  }

  input, 
  textarea {
    color: #1f2937 ;
  }
  
  input::placeholder,
  textarea::placeholder {
    color: #9ca3af;
  }
  
  .ProseMirror {
    color: #f9fafb;
  }
  
  .ProseMirror p,
  .ProseMirror h1,
  .ProseMirror h2, 
  .ProseMirror h3,
  .ProseMirror h4,
  .ProseMirror h5,
  .ProseMirror h6,
  .ProseMirror li,
  .ProseMirror ul,
  .ProseMirror ol {
    color: #f9fafb;
  }
}

/* Dice Box Styling */
#dice-box {
  position: fixed !important;
  top: 0 !important;
  left: 0 !important;
  width: 100vw !important;
  height: 100vh !important;
  pointer-events: none !important;
  z-index: 9999 !important;
  overflow: hidden;
}

#dice-box canvas {
  width: 100% !important;
  height: 100% !important;
  pointer-events: none !important;
  display: block;
  z-index: 9999 !important;
}


.dot1 {
  animation: pulse 1s infinite;
  animation-delay: 0s;
  opacity: 0.3;
}

.dot2 {
  animation: pulse 1s infinite;
  animation-delay: 0.2s;
  opacity: 0.3;
}

.dot3 {
  animation: pulse 1s infinite;
  animation-delay: 0.4s;
  opacity: 0.3;
}

@keyframes pulse {
  0% {
    opacity: 0.3;
  }
  50% {
    opacity: 1;
  }
  100% {
    opacity: 0.3;
  }
}

/* Error page animations */
@keyframes float {
  0%, 100% { 
    transform: translateY(0px) rotate(0deg); 
  }
  50% { 
    transform: translateY(-20px) rotate(180deg); 
  }
}

@keyframes float-delayed {
  0%, 100% { 
    transform: translateY(0px) rotate(0deg); 
  }
  50% { 
    transform: translateY(-15px) rotate(-180deg); 
  }
}

@keyframes float-slow {
  0%, 100% { 
    transform: translateY(0px) rotate(45deg); 
  }
  50% { 
    transform: translateY(-10px) rotate(225deg); 
  }
}

.animate-float {
  animation: float 6s ease-in-out infinite;
}

.animate-float-delayed {
  animation: float-delayed 4s ease-in-out infinite 2s;
}

.animate-float-slow {
  animation: float-slow 8s ease-in-out infinite 1s;
}

